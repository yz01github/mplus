<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.youngzeu.mplus.dao.MockEntityMapper" >
  <resultMap id="BaseResultMap" type="com.youngzeu.mplus.entity.mock.MockEntity" >
    <constructor >
      <idArg column="SYSTEM_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <idArg column="MOCK_CODE" jdbcType="VARCHAR" javaType="java.lang.String" />
      <idArg column="MOCK_ATTR" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_STR1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_STR2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_STR3" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_STR4" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_STR5" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MOCK_TAG1" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="MOCK_TAG2" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="MOCK_TAG3" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="INSERT_USER" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UPDATE_USER" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="INSERT_TIME" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
      <arg column="UPDATE_TIME" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    SYSTEM_ID, MOCK_CODE, MOCK_ATTR, MOCK_STR1, MOCK_STR2, MOCK_STR3, MOCK_STR4, MOCK_STR5, 
    MOCK_TAG1, MOCK_TAG2, MOCK_TAG3, INSERT_USER, UPDATE_USER, INSERT_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.youngzeu.mplus.entity.mock.MockEntityKey" >
    select 
    <include refid="Base_Column_List" />
    from ps_mock
    where SYSTEM_ID = #{systemId,jdbcType=VARCHAR}
      and MOCK_CODE = #{mockCode,jdbcType=VARCHAR}
      and MOCK_ATTR = #{mockAttr,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.youngzeu.mplus.entity.mock.MockEntityKey" >
    delete from ps_mock
    where SYSTEM_ID = #{systemId,jdbcType=VARCHAR}
      and MOCK_CODE = #{mockCode,jdbcType=VARCHAR}
      and MOCK_ATTR = #{mockAttr,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.youngzeu.mplus.entity.mock.MockEntity" >
    insert into ps_mock (SYSTEM_ID, MOCK_CODE, MOCK_ATTR, 
      MOCK_STR1, MOCK_STR2, MOCK_STR3, 
      MOCK_STR4, MOCK_STR5, MOCK_TAG1, 
      MOCK_TAG2, MOCK_TAG3, INSERT_USER, 
      UPDATE_USER, INSERT_TIME, UPDATE_TIME
      )
    values (#{systemId,jdbcType=VARCHAR}, #{mockCode,jdbcType=VARCHAR}, #{mockAttr,jdbcType=VARCHAR}, 
      #{mockStr1,jdbcType=VARCHAR}, #{mockStr2,jdbcType=VARCHAR}, #{mockStr3,jdbcType=VARCHAR}, 
      #{mockStr4,jdbcType=VARCHAR}, #{mockStr5,jdbcType=VARCHAR}, #{mockTag1,jdbcType=CHAR}, 
      #{mockTag2,jdbcType=CHAR}, #{mockTag3,jdbcType=CHAR}, #{insertUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.youngzeu.mplus.entity.mock.MockEntity" >
    insert into ps_mock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="systemId != null" >
        SYSTEM_ID,
      </if>
      <if test="mockCode != null" >
        MOCK_CODE,
      </if>
      <if test="mockAttr != null" >
        MOCK_ATTR,
      </if>
      <if test="mockStr1 != null" >
        MOCK_STR1,
      </if>
      <if test="mockStr2 != null" >
        MOCK_STR2,
      </if>
      <if test="mockStr3 != null" >
        MOCK_STR3,
      </if>
      <if test="mockStr4 != null" >
        MOCK_STR4,
      </if>
      <if test="mockStr5 != null" >
        MOCK_STR5,
      </if>
      <if test="mockTag1 != null" >
        MOCK_TAG1,
      </if>
      <if test="mockTag2 != null" >
        MOCK_TAG2,
      </if>
      <if test="mockTag3 != null" >
        MOCK_TAG3,
      </if>
      <if test="insertUser != null" >
        INSERT_USER,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="insertTime != null" >
        INSERT_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="systemId != null" >
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="mockCode != null" >
        #{mockCode,jdbcType=VARCHAR},
      </if>
      <if test="mockAttr != null" >
        #{mockAttr,jdbcType=VARCHAR},
      </if>
      <if test="mockStr1 != null" >
        #{mockStr1,jdbcType=VARCHAR},
      </if>
      <if test="mockStr2 != null" >
        #{mockStr2,jdbcType=VARCHAR},
      </if>
      <if test="mockStr3 != null" >
        #{mockStr3,jdbcType=VARCHAR},
      </if>
      <if test="mockStr4 != null" >
        #{mockStr4,jdbcType=VARCHAR},
      </if>
      <if test="mockStr5 != null" >
        #{mockStr5,jdbcType=VARCHAR},
      </if>
      <if test="mockTag1 != null" >
        #{mockTag1,jdbcType=CHAR},
      </if>
      <if test="mockTag2 != null" >
        #{mockTag2,jdbcType=CHAR},
      </if>
      <if test="mockTag3 != null" >
        #{mockTag3,jdbcType=CHAR},
      </if>
      <if test="insertUser != null" >
        #{insertUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youngzeu.mplus.entity.mock.MockEntity" >
    update ps_mock
    <set >
      <if test="mockStr1 != null" >
        MOCK_STR1 = #{mockStr1,jdbcType=VARCHAR},
      </if>
      <if test="mockStr2 != null" >
        MOCK_STR2 = #{mockStr2,jdbcType=VARCHAR},
      </if>
      <if test="mockStr3 != null" >
        MOCK_STR3 = #{mockStr3,jdbcType=VARCHAR},
      </if>
      <if test="mockStr4 != null" >
        MOCK_STR4 = #{mockStr4,jdbcType=VARCHAR},
      </if>
      <if test="mockStr5 != null" >
        MOCK_STR5 = #{mockStr5,jdbcType=VARCHAR},
      </if>
      <if test="mockTag1 != null" >
        MOCK_TAG1 = #{mockTag1,jdbcType=CHAR},
      </if>
      <if test="mockTag2 != null" >
        MOCK_TAG2 = #{mockTag2,jdbcType=CHAR},
      </if>
      <if test="mockTag3 != null" >
        MOCK_TAG3 = #{mockTag3,jdbcType=CHAR},
      </if>
      <if test="insertUser != null" >
        INSERT_USER = #{insertUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        INSERT_TIME = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where SYSTEM_ID = #{systemId,jdbcType=VARCHAR}
      and MOCK_CODE = #{mockCode,jdbcType=VARCHAR}
      and MOCK_ATTR = #{mockAttr,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youngzeu.mplus.entity.mock.MockEntity" >
    update ps_mock
    set MOCK_STR1 = #{mockStr1,jdbcType=VARCHAR},
      MOCK_STR2 = #{mockStr2,jdbcType=VARCHAR},
      MOCK_STR3 = #{mockStr3,jdbcType=VARCHAR},
      MOCK_STR4 = #{mockStr4,jdbcType=VARCHAR},
      MOCK_STR5 = #{mockStr5,jdbcType=VARCHAR},
      MOCK_TAG1 = #{mockTag1,jdbcType=CHAR},
      MOCK_TAG2 = #{mockTag2,jdbcType=CHAR},
      MOCK_TAG3 = #{mockTag3,jdbcType=CHAR},
      INSERT_USER = #{insertUser,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      INSERT_TIME = #{insertTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where SYSTEM_ID = #{systemId,jdbcType=VARCHAR}
      and MOCK_CODE = #{mockCode,jdbcType=VARCHAR}
      and MOCK_ATTR = #{mockAttr,jdbcType=VARCHAR}
  </update>
</mapper>